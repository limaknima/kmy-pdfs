package com.fms.pfc.repository.main.api;

import java.util.List;

import org.springframework.data.jpa.repository.JpaRepository;
import org.springframework.data.jpa.repository.Query;

import com.fms.pfc.domain.model.main.PrIngredientAll;

public interface PrIngredientAllRepository extends JpaRepository<PrIngredientAll, String>{

	@Query(value = "with cte_pr as ( "
			+ "select "
			+ "    A.PR_ID "
			+ "    , 0 as parent "
			+ "    , 1 as level "
			+ "	, A.SEL_TS_NO "
			+ "	, CONVERT(varchar, concat(RIGHT('0000'+CAST(A.PR_ING_ID AS VARCHAR(4)),4) "
			+ ", ' ')) AS SEQ "
			+ ", CONVERT(varchar,'') AS SPACES "
			+ "    , A.REF_ID "
			+ "    , A.REF_TYPE "
			+ "    , cast(A.ING_PERC as decimal(13,10)) as ING_PERC "
			+ "    , ( "
			+ "		select STUFF ( "
			+ "			( "
			+ "			select ',' +rm.RAW_MATL_NAME from RAW_MATERIAL rm where 1=1 and rm.RAW_MATL_ID in ( "
			+ "				select p.value from dbo.[fn_split]((select p.ALT_RM "
			+ "				from PR_INGREDIENT p "
			+ "				where 1=1 "
			+ "				and p.ALT_RM is not null "
			+ "				and p.PR_ING_ID = A.PR_ING_ID),',') p "
			+ "				) "
			+ "			FOR XML PATH('') "
			+ "			),1,1,'' "
			+ "		)  "
			+ "	) as altnames, "
			+ "	(select fs.FS_NAME from FLAVOR_STATUS fs where fs.FS_ID=(select p.FLAVOR_STATUS_ID from RAW_MATERIAL p where p.RAW_MATL_ID=A.REF_ID)) as flvstatname, "
			+ "	(select fs.FS_RANK from FLAVOR_STATUS fs where fs.FS_ID=(select p.FLAVOR_STATUS_ID from RAW_MATERIAL p where p.RAW_MATL_ID=A.REF_ID)) as flvstatrank "
			+ "from PR_INGREDIENT A "
			+ "where 1=1 "
			+ "and A.PR_ID = (select pr_id from PRODUCT_RECIPE where PR_ID = ?1) "
			+ "union all "
			+ "select "
			+ "    cur.PR_ID "
			+ "    , ct.pr_id as parent "
			+ "    , ct.level + 1 as level "
			+ "	, cur.SEL_TS_NO "
			+ "	, CONVERT(varchar, concat(ct.SEQ,  RIGHT('0000'+CAST(PR_ING_ID AS VARCHAR(4)),4) "
			+ ", ' ')) AS SEQ "
			+ ", CONVERT(varchar, CONCAT(SPACES, '  ')) AS SPACES "
			+ "    , cur.REF_ID "
			+ "    , cur.REF_TYPE "
			+ "    , cast(cur.ING_PERC*ct.ING_PERC/100 as decimal(13,10)) as ING_PERC "
			+ "    , ( "
			+ "		select STUFF ( "
			+ "			( "
			+ "			select ',' +rm.RAW_MATL_NAME from RAW_MATERIAL rm where 1=1 and rm.RAW_MATL_ID in ( "
			+ "				select p.value from dbo.[fn_split]((select p.ALT_RM "
			+ "				from PR_INGREDIENT p "
			+ "				where 1=1 "
			+ "				and p.ALT_RM is not null "
			+ "				and p.PR_ING_ID = cur.PR_ING_ID),',') p "
			+ "				) "
			+ "			FOR XML PATH('') "
			+ "			),1,1,'' "
			+ "		)  "
			+ "	) as altnames, "
			+ "	(select fs.FS_NAME from FLAVOR_STATUS fs where fs.FS_ID=(select p.FLAVOR_STATUS_ID from RAW_MATERIAL p where p.RAW_MATL_ID=cur.REF_ID)) as flvstatname, "
			+ "	(select fs.FS_RANK from FLAVOR_STATUS fs where fs.FS_ID=(select p.FLAVOR_STATUS_ID from RAW_MATERIAL p where p.RAW_MATL_ID=cur.REF_ID)) as flvstatrank "
			+ "from PR_INGREDIENT cur "
			+ "inner join cte_pr ct on cur.PR_ID = ct.ref_id "
			+ "where 1=1 "
			+ "and ct.REF_TYPE = 301 "
			+ ") "
			+ "select A.PR_ID,  "
			+ "B.PR_NAME, "
			+ "C.RAW_MATL_NAME, "
			+ "CASE WHEN A.REF_TYPE = 301  "
			+ "	THEN 'Intermediate Product'  "
			+ "	WHEN A.REF_TYPE = 201 "
			+ "	THEN 'Raw Material'  "
			+ "	ELSE ''  "
			+ "END AS CATEGORY, "
			+ "A.SEL_TS_NO, "
			+ "CASE WHEN A.REF_TYPE = 301  "
			+ "	THEN CONCAT(SPACES, B.PR_NAME) "
			+ "	WHEN A.REF_TYPE = 201 "
			+ "	THEN CONCAT(SPACES, C.RAW_MATL_NAME) "
			+ "	ELSE ''  "
			+ "END AS INGREDIENT_NAME, "
			+ "A.altnames, "
			+ "A.flvstatname, "
			+ "A.flvstatrank, "
			+ "A.parent,   "
			+ "A.level, "
			+ "A.SEQ, "
			+ "A.REF_ID, "
			+ "A.REF_TYPE, "
			+ "A.ING_PERC "
			+ "FROM cte_pr A "
			+ "LEFT JOIN PRODUCT_RECIPE B "
			+ "ON A.REF_ID = B.PR_ID "
			+ "AND A.REF_TYPE = 301 "
			+ "LEFT JOIN RAW_MATERIAL C "
			+ "ON A.REF_ID = C.RAW_MATL_ID "
			+ "AND A.REF_TYPE = 201 "
			+ "where 1=1 "
			+ "order by  "
			+ "SEQ , "
			+ "level ", nativeQuery = true)
	List<PrIngredientAll> findIngredientsByParentId(int prId);
}
