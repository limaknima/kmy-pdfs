package com.fms.pfc.controller.base;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.servlet.ModelAndView;

import com.fms.pfc.common.Authority;
import com.fms.pfc.domain.model.Usr;
import com.fms.pfc.service.api.base.AlertService;
import com.fms.pfc.service.api.base.LoginService;

@Controller
public class MenuController {

	@Autowired
	private LoginService logServ;

	@Autowired
	private AlertService alertServ;

	@Autowired
	private Authority auth;

	@GetMapping("/")
	public ModelAndView loadHomepage(HttpServletRequest request) {

		Map<String, Object> model = new HashMap<String, Object>();

		model = auth.onPageLoad(model, request);
		Usr usr = logServ.searchUser(request.getRemoteUser());
		model.put("loggedUserName", usr.getUserName());

		int alertCnt = alertServ.getCount(request.getRemoteUser());

		Date todayDate = new Date();
		boolean changePass = false;
		if (usr.getPasswordSetDate() != null) {
			if (todayDate.after(usr.getPasswordSetDate())) {
				changePass = true;
			}
		}

		boolean showReminder = false;
		if (alertCnt > 0 || changePass) {
			showReminder = true;
		}

		model.put("alertCount", alertCnt);
		model.put("changePass", changePass);
		model.put("showReminder", showReminder);

		return new ModelAndView("homepage", model);
	}

	@GetMapping("/menu/regulationMenu")
	public ModelAndView regulationMenu(HttpServletRequest request, HttpServletResponse response) {

		Map<String, Object> model = new HashMap<String, Object>();

		model = auth.onPageLoad(model, request);
		auth.isAuthUrl(request, response);

		return new ModelAndView("menu/regulationMenu", model);
	}

	@GetMapping("/menu/rawMaterialMenu")
	public ModelAndView rawMaterialMenu(HttpServletRequest request, HttpServletResponse response) {

		Map<String, Object> model = new HashMap<String, Object>();

		model = auth.onPageLoad(model, request);
		auth.isAuthUrl(request, response);

		return new ModelAndView("menu/rawMaterialMenu", model);
	}

	@GetMapping("/menu/recipeMenu")
	public ModelAndView recipeMenu(HttpServletRequest request, HttpServletResponse response) {

		Map<String, Object> model = new HashMap<String, Object>();

		model = auth.onPageLoad(model, request);
		auth.isAuthUrl(request, response);

		return new ModelAndView("menu/recipeMenu", model);
	}

	@GetMapping("/menu/permissibilityMenu")
	public ModelAndView permissibilityMenu(HttpServletRequest request, HttpServletResponse response) {

		Map<String, Object> model = new HashMap<String, Object>();

		model = auth.onPageLoad(model, request);
		auth.isAuthUrl(request, response);

		return new ModelAndView("menu/permissibilityMenu", model);
	}

	@GetMapping("/menu/letterMenu")
	public ModelAndView letterMenu(HttpServletRequest request, HttpServletResponse response) {

		Map<String, Object> model = new HashMap<String, Object>();

		model = auth.onPageLoad(model, request);
		auth.isAuthUrl(request, response);

		return new ModelAndView("menu/letterMenu", model);
	}

	@GetMapping("/menu/reportMenu")
	public ModelAndView reportMenu(HttpServletRequest request, HttpServletResponse response) {

		Map<String, Object> model = new HashMap<String, Object>();

		model = auth.onPageLoad(model, request);
		auth.isAuthUrl(request, response);

		return new ModelAndView("menu/reportMenu", model);
	}

	@GetMapping("/menu/adminMenu")
	public ModelAndView adminMenu(HttpServletRequest request, HttpServletResponse response) {

		Map<String, Object> model = new HashMap<String, Object>();

		model = auth.onPageLoad(model, request);
		auth.isAuthUrl(request, response);

		return new ModelAndView("menu/adminMenu", model);
	}

	@GetMapping("/menu/maintenanceMenu")
	public ModelAndView maintenanceMenu(HttpServletRequest request, HttpServletResponse response) {

		Map<String, Object> model = new HashMap<String, Object>();

		model = auth.onPageLoad(model, request);
		auth.isAuthUrl(request, response);

		return new ModelAndView("menu/maintenanceMenu", model);
	}

	@GetMapping("/menu/activityMenu")
	public ModelAndView activityMenu(HttpServletRequest request, HttpServletResponse response) {

		Map<String, Object> model = new HashMap<String, Object>();

		model = auth.onPageLoad(model, request);
		auth.isAuthUrl(request, response);

		return new ModelAndView("menu/activityMenu", model);
	}

	@GetMapping("/menu/prodFileMenu")
	public ModelAndView prodFileMenu(HttpServletRequest request, HttpServletResponse response) {

		Map<String, Object> model = new HashMap<String, Object>();

		model = auth.onPageLoad(model, request);
		auth.isAuthUrl(request, response);

		return new ModelAndView("menu/prodFileMenu", model);
	}

}
