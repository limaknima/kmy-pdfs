package com.fms.pfc.service.api.main;

import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.time.temporal.ChronoUnit;
import java.util.List;
import java.util.stream.Collectors;

import org.apache.commons.lang.StringUtils;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.core.env.Environment;
import org.springframework.stereotype.Service;

import com.fms.pfc.domain.dto.main.G2LotViewDto;
import com.fms.pfc.domain.model.AlertMessage;
import com.fms.pfc.domain.model.main.OnDemandSearch;
import com.fms.pfc.domain.model.main.ProdFileSearch;
import com.fms.pfc.service.api.base.AlertMessageService;
import com.fms.pfc.service.api.main.G2LotViewService;
import com.fms.pfc.service.api.main.OnDemandSearchService;
import com.fms.pfc.service.api.main.ProdFileService;

@Service
public class FileCompareJobProcess {
	private final Logger logger = LoggerFactory.getLogger(FileCompareJobProcess.class);

	private Environment env;
	private AlertMessageService alertMsgServ;
	private OnDemandSearchService odsServ;
	private G2LotViewService g2Serv;
	private ProdFileService pfServ;
	private SendAlertAndEmailService sendServ;

	@Autowired
	public FileCompareJobProcess(Environment env, AlertMessageService alertMsgServ, OnDemandSearchService odsServ,
			G2LotViewService g2Serv, ProdFileService pfServ) {
		this.env = env;
		this.alertMsgServ = alertMsgServ;
		this.odsServ = odsServ;
		this.g2Serv = g2Serv;
		this.pfServ = pfServ;
	}

	public void process() {
		LocalDate todayDate = LocalDate.now();
		String toDate = todayDate.format(DateTimeFormatter.ofPattern("dd/MM/yyyy"));
		
		LocalDate backDate = todayDate.minusDays(2);
		String fromDate = backDate.format(DateTimeFormatter.ofPattern("dd/MM/yyyy"));
		
		long daysBetween = ChronoUnit.DAYS.between(backDate, todayDate);
		
		AlertMessage alertMsg = alertMsgServ.searchAlertById("FILE_COMPARE");
		
		List<String> hplList = g2Serv.hplList();
		
		// loop each hpl
		for (String hpl : hplList) {
			// check from ODS tables - g2 completion lot vs prod file table
			List<OnDemandSearch> search = odsServ.searchByCriteria(hpl, "", "", "", "", "", "", fromDate, toDate);
			// filter by alert other than OK
			search = search.stream().filter(arg0 -> !StringUtils.equalsIgnoreCase(arg0.getAlert(), "ok"))
					.collect(Collectors.toList());
			if (!search.isEmpty()) {

			}

		}

	}

	private String convertIntStr(int dm) {
		String result = "";
		if (dm > 0 && dm < 10)
			result = "0" + dm;
		else
			result = String.valueOf(dm);
		return result;
	}

	private void sendAlert() {
		// TODO Auto-generated method stub
		
	}

	private List<G2LotViewDto> getCompletedG2LotList(String lot, String hpl, String model, String year, String mth,
			String day, String prodLn, String seq) {
		return g2Serv.searchByCriteria(lot, hpl, model, year, mth, day, prodLn, seq);
	}

	private List<ProdFileSearch> getProdFileList(String searchHplId, String searchHplModelId, String searchYear,
			String searchMth, String g2LotNo, String g2LotNoExp, String path, String pathExp) {
		return pfServ.searchByCriteria(searchHplId, searchHplModelId, searchYear, searchMth, g2LotNo, g2LotNoExp, path,
				pathExp);
	}
}
